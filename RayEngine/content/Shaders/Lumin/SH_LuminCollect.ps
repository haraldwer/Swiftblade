#include "Shaders/Uniforms/SH_FrameUniforms.si"
#include "Shaders/Uniforms/SH_TexUniforms.si"
#include "Shaders/Utility/SH_CubeSampling.si"

#include "Shaders/PBR/SH_PBR_ConvoluteIrradiance.si"
#include "Shaders/PBR/SH_PBR_Prefilter.si"

in vec2 TexCoord;
in vec2 RectCoord;

layout(location = 0) out vec4 OutIrradiance;
layout(location = 1) out vec4 OutPrefilter;

void main()
{
    vec2 texel = vec2(1.0f) / Resolution;
    
    vec4 worldPos = SampleWorldPos(TexCoord);
    vec3 camDiff = worldPos.xyz - CameraPosition;
    float camDist = length(camDiff);
    vec3 camDir = camDiff / camDist;
    
    OutPrefilter = Prefilter(TexFrame, texel, RefRect, camDir, 1.0f);
    OutIrradiance.rgb = ConvoluteIrradiance(TexFrame, texel, RefRect, camDir);
    OutIrradiance.a = worldPos.w;
}
