#include "Shaders/Uniforms/SH_FrameUniforms.si"
#include "Shaders/Utility/SH_Utility.si"

const int SSSHADOW_STEPS = 16;
const float SSSHADOW_SCALE = 0.05f;
const float SSSHADOW_NEAR_RANGE = 0.1f;
const float SSSHADOW_FAR_RANGE = 0.5f;

float ScreenSpaceShadow(vec3 InPos, vec3 InLightPos)
{
    // TODO: Step in screen-space direction instead of world space

    vec3 dir = normalize(InLightPos - InPos);
    for (int i = 0; i < SSSHADOW_STEPS; i++)
    {
        vec3 sampleWorldPos = InPos + dir * float(i + 1) * SSSHADOW_SCALE;
        vec4 sampleViewPos = WorldToView(sampleWorldPos, ViewProj);
        vec2 sampleCoord = Saturate(ViewToCoord(sampleViewPos));
        float depth = SampleWorldPos(sampleCoord).w;
        float depthDiff = sampleViewPos.z - depth;

        if (depthDiff > SSSHADOW_NEAR_RANGE && depthDiff < SSSHADOW_FAR_RANGE)
        {
            float shadowFade = Saturate(Pow2(float(i) / float(SSSHADOW_STEPS)));
            return shadowFade;
        }
    }
    return 1.0f;
}
