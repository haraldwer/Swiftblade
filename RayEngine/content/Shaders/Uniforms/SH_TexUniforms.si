
#include "Shaders/Uniforms/SH_FrameUniforms.si"

uniform sampler2D TexPosition; // xyz - Position (camera relative), w - Linear depth
uniform sampler2D TexNormal; // xyz - Normal, a - DeferredID
uniform sampler2D TexData; // xy - Velocity, z - Height, w - Gameplay

uniform sampler2D TexAlbedo; // rgb - Albedo, w - Emissive factor
uniform sampler2D TexSurface; // r - Metallic, g - Roughness, b - AO

uniform sampler2D TexAO;
uniform vec2 TexAOScale;

uniform sampler2D TexFrame;

vec4 SampleWorldPos(vec2 InCoord)
{
    vec4 pos = texture(TexPosition, InCoord);
    pos.xyz += CameraPosition;
    return pos;
}

vec3 SampleNormal(vec2 InCoord)
{
    return normalize(texture(TexNormal, InCoord).xyz);
}

float SampleAO(vec2 InCoord)
{
    return 1.0f - texture(TexAO, clamp(InCoord, 0.0001f, 0.9999f) * TexAOScale).r;
}

vec4 SampleAlbedo(vec2 InCoord)
{
    return texture(TexAlbedo, InCoord);
}

vec3 SampleSurface(vec2 InCoord)
{
    return texture(TexSurface, InCoord).rgb;
}