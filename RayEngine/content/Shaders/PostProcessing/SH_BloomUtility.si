
vec3 BloomSampleDown(sampler2D InTex, vec2 InCoord, vec2 InPixelSize)
{
    vec3 result;
    result = texture(InTex, InCoord).rgb;

    float closeScale = 0.72;
    float farScale = 1;
    float middleScale = 1;

    float closeWeight = 0.5;
    float middleWeight = 0.25;
    float farWeight = 0.125;

    vec2 edgeOff[4] = vec2[](
        vec2(1,1),
        vec2(1,-1),
        vec2(-1,1),
        vec2(-1,-1)
    );
    vec2 middleOff[4] = vec2[](
        vec2(1, 0),
        vec2(-1,0),
        vec2(0, 1),
        vec2(0,-1)
    );

    for (int i = 0; i < 4; i++)
        result += texture(InTex, InCoord + edgeOff[i] * InPixelSize * closeScale).rgb * closeWeight;
    for (int i = 0; i < 4; i++)
        result += texture(InTex, InCoord + middleOff[i] * InPixelSize * middleScale).rgb * middleWeight;
    for (int i = 0; i < 4; i++)
        result += texture(InTex, InCoord + edgeOff[i] * InPixelSize * farScale).rgb * farWeight;

    float totalWeight = 4 * closeWeight + 4 * middleWeight + 4 * farWeight + 1;
    result /= totalWeight;
    return result;
}

vec3 BloomSampleUp(sampler2D InTex, vec2 InCoord, vec2 InPixelSize)
{
    vec3 result;
    result = texture(InTex, InCoord).rgb;

    float middleScale = 1;
    float farScale = 1;
    float middleWeight = 0.25;
    float farWeight = 0.125;

    vec2 edgeOff[4] = vec2[](
        vec2(1,1),
        vec2(1,-1),
        vec2(-1,1),
        vec2(-1,-1)
    );
    vec2 middleOff[4] = vec2[](
        vec2(1, 0),
        vec2(-1,0),
        vec2(0, 1),
        vec2(0,-1)
    );
    
    for (int i = 0; i < 4; i++)
        result += texture(InTex, InCoord + middleOff[i] * InPixelSize * middleScale).rgb * middleWeight;
    for (int i = 0; i < 4; i++)
        result += texture(InTex, InCoord + edgeOff[i] * InPixelSize * farScale).rgb * farWeight;

    float totalWeight = 4 * middleWeight + 4 * farWeight + 1;
    result /= totalWeight;
    return result;
}
