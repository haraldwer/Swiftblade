#version 330

#include "Shaders/SH_FrameUniforms.si"
#include "Shaders/SH_HSV.si"

uniform sampler2D TexQuantize;

in vec2 TexCoord;
out vec4 Output;

vec2 EdgeDirection(vec2 InOffset, vec2 InWeight, vec3 InHSV)
{
    
}

vec4 ApplyFXAA()
{
    // 1. Find edges
    
    // Get current pixel
    vec4 color = texture(TexQuantize, TexCoord).rgba;
    vec3 hsv = rgb2hsv(color.rgb);
    
    // Calculate edge direction
    vec2 dir = vec2(0);
    dir += SampleOffset(vec2( 1, 0), 1.0f, hsv);
    dir += SampleOffset(vec2(-1, 0), 1.0f, hsv);
    dir += SampleOffset(vec2( 0, 1), 1.0f, hsv);
    dir += SampleOffset(vec2( 0,-1), 1.0f, hsv);
    dir += SampleOffset(vec2( 1, 1), 0.7f, hsv);
    dir += SampleOffset(vec2(-1, 1), 0.7f, hsv);
    dir += SampleOffset(vec2( 1,-1), 0.7f, hsv);
    dir += SampleOffset(vec2(-1,-1), 0.7f, hsv);
    dir /= 8.0f;

    // Vector size is edge weight

    // 2. Blur image (based on edge strength)
    
}

void main()
{
    vec4 fxaa = ApplyFXAA();
    Output.rgb = fxaa.rgb;
    Output.a = 1.0f;
}