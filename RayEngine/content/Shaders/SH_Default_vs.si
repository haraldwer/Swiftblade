
#include "Shaders/Uniforms/SH_FrameUniforms.si"

// In
in vec3 vertexPosition;
in vec3 vertexNormal;
in vec2 vertexTexCoord;
in mat4 instanceTransform;

// Out
out vec4 WorldPosition;
out vec3 WorldNormal;
out vec3 ObjectPosition;
out vec3 VertexPosition;
out vec3 Velocity;
out vec2 TexCoord;

void Default()
{
    WorldNormal = normalize(mat3(instanceTransform) * vertexNormal);
    VertexPosition = vertexPosition;
    ObjectPosition = (instanceTransform * vec4(vec3(0.0f), 1.0f)).xyz;
    WorldPosition = (instanceTransform * vec4(vertexPosition, 1.0f));
    vec4 screenPos = ViewProj * WorldPosition;
    vec4 prevScreenPos = ViewProjPrev * WorldPosition;
    gl_Position = screenPos;
    WorldPosition.w = screenPos.z; // Store linear depth
    TexCoord = vertexTexCoord;

    screenPos.xy /= max(screenPos.z, 1.0f);
    prevScreenPos.xy /= max(prevScreenPos.z, 1.0f);
    screenPos.xy = clamp(screenPos.xy, -0.9999f, 0.9999f);
    prevScreenPos.xy = clamp(prevScreenPos.xy, -0.9999f, 0.9999f);
    Velocity = vec3(screenPos.xy - prevScreenPos.xy, 0.0f);
}